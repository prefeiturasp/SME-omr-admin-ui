<% include ../../_partial/header.ejs %>
<% include ../../_partial/navbar.ejs %>

<div class="heading-page">
    <div class="container">
        <ol class="breadcrumb">
            <li><a href="/">Dashboard</a></li>
            <li><a href="/aggregation">Lotes</a></li>
            <li><a href="/aggregation/<%= Exam._aggregation._id %>"><%= Exam._aggregation._id %></a></li>
            <li><a href="/aggregation/<%= Exam._aggregation._id %>/exam">Provas</a></li>
            <li class="active">Detalhe</li>
        </ol>
        <h2>Prova - <%= Exam._id %></h2>
    </div>
</div>
<%
    var Columns, processStatusStyle, processStatusText, processStatusIcon, total = 0;
    Helper.Template.SetUp(
        Template.items,
        Template.columns
    );

    switch (Exam.processStatus) {
        case Enumerator.ProcessStatus.PENDING:
            processStatusStyle = 'pending';
            processStatusText = "Aguardando";
            processStatusIcon = "schedule";
            break;
        case Enumerator.ProcessStatus.PRE_PROCESSING:
            processStatusStyle = 'warning';
            processStatusText = "Identificando";
            processStatusIcon = "play_circle_outline";
            break;
        case Enumerator.ProcessStatus.PROCESSING:
            processStatusStyle = 'processing';
            processStatusText = "Corrigindo";
            processStatusIcon = "play_circle_outline";
            break;
        case Enumerator.ProcessStatus.ERROR:
            processStatusStyle = 'danger';
            processStatusText = "Erro";
            processStatusIcon = "error_outline";
            break;
        case Enumerator.ProcessStatus.WARNING:
            processStatusStyle = 'warning';
            processStatusText = "Atenção";
            processStatusIcon = "info_outline";
            break;
        default:
            processStatusStyle = 'success';
            processStatusText = "Sucesso";
            processStatusIcon = "done";
            break;
    }

    Columns = Helper.Template.ColumnsData;
%>

<div class="apoio">
    <div class="container">
        <ul class="info-bar inverse">
            <li>
                <a href="/aggregation/<%= Exam._aggregation._id %>/exam"><i class="material-icons">arrow_back</i></a>
            </li>
            <li>
                <span>
                    <span class="indicador">ID Externo do Gabarito</span> <%= Template.externalId %>
                </span>
            </li>
            <li>
                <span>
                    <span class="indicador">ID Externo da Prova</span> <%= Exam.externalId %>
                </span>
            </li>
            <li>
                <span>
                    <span class="indicador">Questões</span> <%= Template.questions %>
                </span>
            </li>
            <li>
                <span>
                    <span class="indicador">Alternativas</span> <%= Template.alternatives %>
                </span>
            </li>
            <li>
                <span>
                    <span class="indicador">Status</span> <span class="label label-<%= processStatusStyle %>"><a href="?processStatus=<%= Exam.processStatus %>"><i class="material-icons"><%= processStatusIcon %></i><%= processStatusText %></a></span>
                </span>
            </li>
        </ul>
    </div>
</div>
<article class="container container-principal">

    <div class="table-heading">
        <div class="row">
            <h1 class="col-md-9">Correção</h1>
            <% if (Exam.answers.length > 0) { %>
            <div class="col-md-3">
                <div class="pull-right">
                    <a id='toggleTemplate' href="javascript:void(0);" class="btn btn-default"><i class="material-icons">add_circle_outline</i> Exibir Gabarito</a>
                </div>
            </div>
            <% } %>
        </div>
    </div>
    <% if (Exam.answers.length > 0) { %>
    <div class="row template">
        <% Columns.forEach(function(column, colI) {%>
        <div class="col-md-3">
            <table class="table table-striped">
                <tr>
                    <th colspan="<%= Template.alternatives + 1%>"></th>
                </tr>
                <% column.forEach(function(question, queI) { %>
                <tr>
                    <td class="template-question"><%=queI + Helper.Template.Lines * colI + 1%></td>
                    <% for (var i = 0; i < Template.alternatives; i++) { %>
                    <%
                        var templateClass = (question.correctId == question.answers[i]? 'has-template': ''),
                            stateClass,
                            answerClass;

                        if (Exam.answers[total].state != Enumerator.ExamQuestionState.NULL && Exam.answers[total].state != Enumerator.ExamQuestionState.ERASED)
                            stateClass = (Exam.answers[total].answer == question.answers[i]? (templateClass != ''? 'has-success label-success': 'has-error label-danger'): '');

                        answerClass = templateClass + ' ' + stateClass
                    %>
                    <td class="<%=answerClass%>"><%= String.fromCharCode(97 + i).toUpperCase() %></td>
                    <% }
                    total += 1;
                    %>
                </tr>
                <% }) %>
            </table>

        </div>
        <% }) %>
    </div>
    <div class="table-heading">
        <div class="row">
            <div class="col-md-12">
                <ul class="pull-right exam-legend">
                    <li class="pull-left"><h4>Legenda</h4></li>
                    <li class="pull-right"><span class="label label-primary">Gabarito</span></li>
                    <li class="pull-right"><span class="label label-success">Corretas</span></li>
                    <li class="pull-right"><span class="label label-danger">Incorretas</span></li>
                </ul>
            </div>
        </div>
    </div>
    <% } else { %>
        <p class="alert alert-danger">Esta prova contém erros que impossibilitaram sua correção</p>
    <% } %>

    <% if (Logs.length) { %>
    <div class="table-heading">
        <div class="row">
            <h3 class="col-md-10">Logs</h3>
        </div>
    </div>

    <table class="table table-striped">
        <tr>
            <th data-toggle="tooltip" data-placement="bottom" title="Level">Level</th>
            <th data-toggle="tooltip" data-placement="bottom" title="Método">Método</th>
            <th data-toggle="tooltip" data-placement="bottom" title="Registro">Registro</th>
            <th data-toggle="tooltip" data-placement="bottom" title="Vizualizar" class="text-center">Visualizar</th>
        </tr>
    <%
    var logLevelText, logLevelStyle, logLevelIcon, logDate;

    Logs.forEach(function (elem) {
        if (elem.type == Enumerator.LogType.API) logTypeText = 'API';
        else if (elem.type == Enumerator.LogType.ADMIN_UI) logTypeText = 'Área Administrativa';
        else if (elem.type == Enumerator.LogType.PREPROCESSOR) logTypeText = 'Pré-processador';
        else if (elem.type == Enumerator.LogType.PROCESSOR) logTypeText = 'Processador';

        if (elem.level == Enumerator.LogLevel.ERROR) {
            logLevelText = "Erro";
            logLevelStyle = "danger";
            logLevelIcon = "error_outline";
        } else if (elem.level == Enumerator.LogLevel.WARNING) {
            logLevelText = "Atenção";
            logLevelStyle = "warning";
            logLevelIcon = "info_outline";
        } else if (elem.level == Enumerator.LogLevel.INFORMATION) {
            logLevelText = "Informação";
            logLevelStyle = "info";
            logLevelIcon = "info_outline";
        }

        logDate = new Date(elem.creationDate);
        logDate = logDate.getDate() + '/' + (logDate.getMonth()+1) + '/' + logDate.getFullYear() + ' '
                + logDate.getHours() + ':' + logDate.getMinutes() + ':' + logDate.getSeconds();
    %>

    <tr>
        <td><span class="label label-<%= logLevelStyle %>"><i class="material-icons"><%= logLevelIcon %></i><%= logLevelText %></span></td>
        <td><%= elem.resource.method || elem.resource.process %></td>
        <td><%= logDate %></td>
        <td class="text-center"><a href="/log/<%= elem._id %>" target="_blank"><i class="material-icons">search</i></a></td>
    </tr>
    <% }) %>
    </table>

    <% } %>
</article>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var toggleTemplate = document.getElementById('toggleTemplate');

        toggleTemplate.addEventListener('click', function () {
            Util.CSS.swapClass(toggleTemplate, 'btn-primary');

            $('.has-template').toggleClass('label-primary');

            if (Util.CSS.hasClass(toggleTemplate, 'btn-primary')) {
                toggleTemplate.innerHTML = '<i class="material-icons">remove_circle_outline</i> Esconder Gabarito';
            }
            else {
                toggleTemplate.innerHTML = '<i class="material-icons">add_circle_outline</i> Exibir Gabarito';
            }

        });
    });
</script>

<% include ../../_partial/footer.ejs %>